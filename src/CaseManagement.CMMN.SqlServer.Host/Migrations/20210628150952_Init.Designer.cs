// <auto-generated />
using System;
using CaseManagement.CMMN.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CaseManagement.CMMN.SqlServer.Host.Migrations
{
    [DbContext(typeof(CaseManagementDbContext))]
    [Migration("20210628150952_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CaseEltInstance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaseEltInstanceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CasePlanInstanceAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EltId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileState")
                        .HasColumnType("int");

                    b.Property<bool>("IsBlocking")
                        .HasColumnType("bit");

                    b.Property<string>("ManualActivationRule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MilestoneState")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbOccurrence")
                        .HasColumnType("int");

                    b.Property<string>("RepetitionRule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TakeStageState")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseEltInstanceId");

                    b.HasIndex("CasePlanInstanceAggregateAggregateId");

                    b.ToTable("CaseEltInstance");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CaseEltInstanceTransitionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseEltInstanceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ExecutionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Transition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseEltInstanceId");

                    b.ToTable("CaseEltInstanceTransitionHistory");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CaseFileAggregate", b =>
                {
                    b.Property<string>("AggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("AggregateId");

                    b.ToTable("CaseFiles");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CaseFileItemOnPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IncomingTokens")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConsumed")
                        .HasColumnType("bit");

                    b.Property<int?>("SEntryId")
                        .HasColumnType("int");

                    b.Property<string>("SourceRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardEvent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SEntryId");

                    b.ToTable("CaseFileItemOnPart");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanAggregate", b =>
                {
                    b.Property<string>("AggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaseFileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasePlanId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbInstances")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("XmlContent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AggregateId");

                    b.ToTable("CasePlans");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanFileItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CasePlanAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DefinitionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EltId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CasePlanAggregateAggregateId");

                    b.ToTable("CasePlanFileItem");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanInstance.CaseEltInstanceProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseEltInstanceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CaseEltInstanceId");

                    b.ToTable("CaseEltInstanceProperty");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanInstanceAggregate", b =>
                {
                    b.Property<string>("AggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaseFileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasePlanId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecutionContextVariables")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("AggregateId");

                    b.ToTable("CasePlanInstances");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanInstanceFileItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseFileItemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasePlanElementInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasePlanInstanceAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExternalValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CasePlanInstanceAggregateAggregateId");

                    b.ToTable("CasePlanInstanceFileItem");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanInstanceRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CasePlanInstanceAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EltId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CasePlanInstanceAggregateAggregateId");

                    b.ToTable("CasePlanInstanceRole");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanInstanceWorkerTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CasePlanElementInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasePlanInstanceAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CasePlanInstanceAggregateAggregateId");

                    b.ToTable("CasePlanInstanceWorkerTask");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CasePlanAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EltId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CasePlanAggregateAggregateId");

                    b.ToTable("CasePlanRole");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CaseWorkerTaskAggregate", b =>
                {
                    b.Property<string>("AggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CasePlanInstanceElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasePlanInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("AggregateId");

                    b.ToTable("CaseWorkers");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.Criteria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseEltInstanceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SEntryId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseEltInstanceId");

                    b.HasIndex("SEntryId");

                    b.ToTable("Criteria");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.ManualActivationRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Expression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ManualActivationRule");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.PlanItemOnPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IncomingTokens")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConsumed")
                        .HasColumnType("bit");

                    b.Property<int?>("SEntryId")
                        .HasColumnType("int");

                    b.Property<string>("SourceRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardEvent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SEntryId");

                    b.ToTable("PlanItemOnPart");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.SEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IfPart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SEntry");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CaptureDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CasePlanElementInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasePlanInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCaptured")
                        .HasColumnType("bit");

                    b.Property<string>("Parameters")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionLst");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CaseEltInstance", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Domains.CaseEltInstance", null)
                        .WithMany("Children")
                        .HasForeignKey("CaseEltInstanceId");

                    b.HasOne("CaseManagement.CMMN.Domains.CasePlanInstanceAggregate", null)
                        .WithMany("Children")
                        .HasForeignKey("CasePlanInstanceAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CaseEltInstanceTransitionHistory", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Domains.CaseEltInstance", null)
                        .WithMany("TransitionHistories")
                        .HasForeignKey("CaseEltInstanceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CaseFileItemOnPart", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Domains.SEntry", null)
                        .WithMany("FileItemOnParts")
                        .HasForeignKey("SEntryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanFileItem", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Domains.CasePlanAggregate", null)
                        .WithMany("Files")
                        .HasForeignKey("CasePlanAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanInstance.CaseEltInstanceProperty", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Domains.CaseEltInstance", null)
                        .WithMany("Properties")
                        .HasForeignKey("CaseEltInstanceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanInstanceFileItem", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Domains.CasePlanInstanceAggregate", null)
                        .WithMany("Files")
                        .HasForeignKey("CasePlanInstanceAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanInstanceRole", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Domains.CasePlanInstanceAggregate", null)
                        .WithMany("Roles")
                        .HasForeignKey("CasePlanInstanceAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanInstanceWorkerTask", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Domains.CasePlanInstanceAggregate", null)
                        .WithMany("WorkerTasks")
                        .HasForeignKey("CasePlanInstanceAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanRole", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Domains.CasePlanAggregate", null)
                        .WithMany("Roles")
                        .HasForeignKey("CasePlanAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.Criteria", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Domains.CaseEltInstance", null)
                        .WithMany("Criterias")
                        .HasForeignKey("CaseEltInstanceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CaseManagement.CMMN.Domains.SEntry", "SEntry")
                        .WithMany()
                        .HasForeignKey("SEntryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("SEntry");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.PlanItemOnPart", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Domains.SEntry", null)
                        .WithMany("PlanItemOnParts")
                        .HasForeignKey("SEntryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CaseEltInstance", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Criterias");

                    b.Navigation("Properties");

                    b.Navigation("TransitionHistories");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanAggregate", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.CasePlanInstanceAggregate", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Files");

                    b.Navigation("Roles");

                    b.Navigation("WorkerTasks");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Domains.SEntry", b =>
                {
                    b.Navigation("FileItemOnParts");

                    b.Navigation("PlanItemOnParts");
                });
#pragma warning restore 612, 618
        }
    }
}
